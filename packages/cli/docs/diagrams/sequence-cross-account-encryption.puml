@startuml
'https://plantuml.com/sequence-diagram

autonumber

' need mechanism to figure out which services need to be updated if a given global parameter is updated
title sequence diagram - cenv app implementation
actor ServiceDeveloper

ServiceDeveloperA -> cenv: developer runs \n'cenv install -k'
cenv -> AMS_KMS: creates a kms key \nwith the alias curb-key
ServiceDeveloperA -> cenv: developer runs \n'cenv add -enc \n-a encryptedVar \nvalue' to create an \nencrypted param
cenv -> AWS_KMS: cenv uses AWS KMS to \nencrypt the value
cenv -> AWS_ParameterStore: writes \nencrypted param to parameter store
ServiceDeveloperA -> git: developer runs \n'git add -A && \ngit commit -m \n"push .cenv file \nwith encrypted param \nin it && git push"
git -> github: git pushes the code to github
ServiceDeveloperA -> cenv: developer runs \n'cenv install -aka \n[ACCOUNT_NUMBER]' \nupdate curb-key key \npolicy to give the other \naccount access to it
cenv -> AWS_KMS: updates the key policy \nto allow access to the \nother account
ServiceDeveloperB -> cenv: developer runs 'cenv \nconfig -k' to configure \nthe cenv tool to access \nthe other account and \nenter the kms key that \nwas create on the other \naccount to  the KMS_KEY prompt
cenv -> cenv: cenv configures the cenv tool \nto access an account and stores \nthe KMS_KEY as an env variable
ServiceDeveloperB -> cenv: developer runs 'cenv install' \nto create a user group that \nhas access to the key set \nas an env var and adds the \ncurrent user to it
cenv -> AWS_IAM: creates the user group and the \nkms key policy and adds the \ncurrent user to it
ServiceDeveloperB -> cenv: developer runs 'cenv init' \non the package that contains \nthe .cenv file with the encrypted \nparam
cenv -> AWS_AppConfig & AWS_ParameterStore: creates the application for the \npackage and pushes the parameters \nincluding an encrypted one to AWS \nParameter Store
ServiceDeveloperB -> cenv: developer runs 'cenv params -D'
cenv -> AWS_AppConfig: retrieve the application config
cenv -> KMS: cenv uses KMS and the key stored \nin the other account to decrypt the \nvariables that are encrypted
@enduml
